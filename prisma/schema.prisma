generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

//* ==== Models ==================================================================== *//

model User {
  id         Int      @id @unique @default(autoincrement())
  email      String?  @unique
  name       String?
  password   String?
  avatarUrl  String?

  githubId   String? @unique
  googleId   String? @unique

  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  UserPermission UserPermission[]

  @@map(name: "user")

  refreshTokens RefreshToken[]
  LinguisticAnalysisBase LinguisticAnalysisBase[]
  LinguisticAnalysisError LinguisticAnalysisError[]
}

model RefreshToken {
  id           Int      @id @unique @default(autoincrement())
  token        String   @unique
  userId       Int
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@map(name: "refresh_tokens")
}

model UserPermission {
  id         Int        @id @unique @default(autoincrement())
  userId     Int
  permission Permission

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map(name: "user_permission")
}

model EmailVerificationCode {
  id    Int    @id @default(autoincrement())
  email String
  code  String
}

//* ==== Enums ==================================================================== *//

enum Permission {
  AiGenerate
}

